
/* RUNE MANIFEST
 * 
 * load your manifest here, don't delete this comment
 * if you want @sentinel to help you install rune
 * 
 * */
use Rune\Aether\Manifest as Aether;
use Rune\Chanter\Manifest as Chanter;
use Rune\Whisper\Manifest as Whisper;
use Rune\Weaver\Manifest as Weaver;
use Rune\Keeper\Manifest as Keeper;
use Rune\Crafter\Manifest as Crafter;
use Rune\Forger\Manifest as Forger;
use Rune\Specter\Manifest as Specter;
use Rune\Cipher\Manifest as Cipher;
#sentinel-manifest



/* RUNE ARISE
 * 
 * in arise you will load ether, essence, entity.
 * in some cases if you want optimalize your system arise partial
 * with ether(), essence(), entity()
 * 
 *  */
Aether::arise();
Chanter::arise();
Whisper::arise();
Weaver::arise();
Keeper::arise();
Crafter::arise();
Forger::arise();
Specter::arise();
Cipher::arise();
#sentinel-arise



/* RUNE SPACE
 * 
 * inner of origin() & awaken() that's your working space
 * you can build your own Rune by insert variable of require_once
 * vendor autoload to origin()
 * 
 *  */
Aether::origin();


// Let's Code!

Chanter::note('build', 'build website file');
Chanter::set('build', function() {
  
  // create crafting environment
  Crafter::set('dist/index.php', function() {
    Crafter::base('TYPE', 'plain');
    Crafter::base('LANGUAGE', ['html','css','js', 'php']);
    
    // automatic select
    Forger::scan('src/nirvana', function($item) {
      Crafter::item($item->target);  
    });

    // manual select
    Crafter::item('src/index.head.html');
    Crafter::item('src/index.html');
    Crafter::item('src/index.css');
    Crafter::item('src/index.js');
    Crafter::item('src/index.php');
  });

  // build artefact shard with keeper
  Keeper::artefact(Crafter::get('dist/index.php'));

  // run crafting
  Crafter::run('dist/index.php');

});

Chanter::note('serve', 'local development server with aether');
Chanter::set('serve', function() {
  
  Aether::localhost([
    'host'=> 'localhost',
    'port'=> 8000,
    'path'=> 'dist',
    'mode'=> 'private',
  ]);

});

Chanter::note('watch', 'watch build repeatly with observer');
Chanter::set('watch', function() {
  
  // build it first
  Chanter::cast('{{SELF}} build');

  // then observing the file
  Specter::observer(AETHER_REPO.'/src/', function() {
    Whisper::set(
      Chanter::cast('{{SELF}} build')
    );
  });

});

Chanter::note('start', 'start all server & watch');
Chanter::set('start', function() {

  // run serve & watch
  Specter::open("{{SELF}} serve");
  Specter::open("{{SELF}} watch");

  // optional if you want to use altar
  // Specter::open("{{SELF}} sentinel --altar_run");

});


#sentinel-space
Aether::awaken();
// thanks for use this project.